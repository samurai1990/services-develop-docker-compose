version: '3.9'

services:
  redis:
    image: redis:6-bullseye
    container_name: redis_broker_develop
    command: redis-server --requirepass redisadmin
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD","redis-cli","ping"]

  postgres:
    image: postgres:14-bullseye
    container_name: postgres_db_develop
    environment:
      POSTGRES_USER: postgresadmin
      POSTGRES_PASSWORD: postgresadmin
      POSTGRES_DB: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'

  mongo:
    image: mongo:5
    container_name: mongo_db_develop
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - '27017:27017'

  mysql:
    image: mysql:8.0.32
    container_name: mysql_db_develop
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: mysqladmin
      MYSQL_ROOT_PASSWORD: mysqladmin
    ports:
      - '3306:3306'

  rabbitmq:
    image: rabbitmq_broker:stable
    hostname: rabbitmq_broker_develop
    container_name: rabbitmq_broker_develop
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmquser
      RABBITMQ_DEFAULT_PASS: rabbitmqpassword
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - '5672:5672'
      - '15672:15672'


  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z.fips
    hostname: minio_object_storage_develop
    container_name: minio_object_storage_develop
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio_storage:/data
    ports:
      - '9000:9000'
      - '9001:9001'

  elasticsearch:
      image: elasticsearch:7.17.20
      container_name: elasticsearch
      restart: always
      environment:
        - discovery.type="single-node"
        - cluster.name="cluster-1"
        - node.name="node-1"
        - xpack.security.enabled=false
        - discovery.type=single-node
      volumes:
        - elasticsearch_storage:/usr/share/elasticsearch/data
      ports:
        - 9200:9200
        
  kibana:
    container_name: kibana
    image: kibana:7.17.20
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  minio_storage: {}
  elasticsearch_storage: {}